server:
  port: 8002

spring:
  datasource:
    url: jdbc:mysql://192.168.1.91/test?verifyServerCertificate=false&useSSL=false&requireSSL=false
    username: root
    password: Pr0d@1234
    driver-class-name: com.mysql.jdbc.Driver
    #-----------------分割线：使用阿里数据源--------------------
#    type: com.alibaba.druid.pool.DruidDataSource
#    # 下面为连接池的补充设置，应用到上面所有数据源中
#    initialSize: 5
#    minIdle: 5
#    maxActive: 20
#    # 配置获取连接等待超时的时间
#    maxWait: 60000
#    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#    timeBetweenEvictionRunsMillis: 60000
#    # 配置一个连接在池中最小生存的时间，单位是毫秒
#    minEvictableIdleTimeMillis: 30000
#    validationQuery: SELECT 1 FROM DUAL
#    testWhileIdle: true
#    testOnBorrow: false
#    testOnReturn: false
#    # 打开PSCache，并且指定每个连接上PSCache的大小
#    poolPreparedStatements: true
#    maxPoolPreparedStatementPerConnectionSize: 20
#    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#    filters: stat,wall,slf4j
#    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#    logSlowSql: true
#    # 合并多个DruidDataSource的监控数据
#    #useGlobalDataSourceStat: true
  redis:
    cluster-modle: single #redis应用模式:single,cluster
    database: 0
    nodes:  "[\"192.168.1.91:6379\"]"  # 集群配置："[\"192.168.1.123:6000\",\"192.168.1.124:6000\",\"192.168.1.125:6000\"]"
    password: ""
    config:
      maxTotal: 500
      maxIdle: 10
      minIdle: 1
      maxWaitMillis: 5000
      testOnBorrow: false
  jpa:
    database: mysql
    database-platform: com.hooray.common.sqldialect.CustomMySQL5Dialect
    hibernate:
      ddl-auto: update
    show-sql: true

eureka:
  instance:
    metadata-map:
      user.name: ${security.user.name}
      user.password: ${security.user.password}

security:
  user:
    name: user
    password: password
